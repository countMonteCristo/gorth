include "std.gorth"

// 145 is a curious number, as
//     1! + 4! + 5! = 1 + 24 + 120 = 145.
// Find the sum of all numbers which are equal to the sum of the factorial of their digits.
// Note: As 1! = 1 and 2! = 2 are not sums they are not included.

// Answer:  40730

const N 10 end
const sizeof(factorial) sizeof(u32) end
const sizeof(factorials) sizeof(factorial) N * end
alloc factorials sizeof(factorials) end

func factorial int : int do
  if dup 2 < do
    drop
    1 return
  end
  dup 1 - factorial
  *
end

// abcd == a! + b! + c! + d!
func f int : bool do
  alloc res sizeof(u32) end
  0 res !32

  dup while dup 0 > do
    dup 10 %
    factorials swap sizeof(factorial) * ptr+ @32
    res @32 + res !32

    if over res @32 < do
      drop drop false return
    end

    10 /
  end drop

  res @32 =
end

func main : int do
  alloc res sizeof(u32) end
  0 res !32
  factorials 0 sizeof(factorials) memset drop

  0 while dup N < do
    dup factorial
    over factorials swap sizeof(factorial) * ptr+ !32
    1 +
  end drop

  10 while dup 50000 < do
    dup
    if dup f do res @32 + res !32 else drop end
    1 +
  end drop

  res @32 puti
  0
end
