include "std.gorth"

// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
// Triangle    T[n] = n(n+1)/2   1, 3,  6, 10, 15, ...
// Pentagonal  P[n] = n(3n-1)/2  1, 5, 12, 22, 35, ...
// Hexagonal   H[n] = n(2n-1)    1, 6, 15, 28, 45, ...
// It can be verified that T[285] = P[165] = H[143] = 40755.
// Find the next triangle number that is also pentagonal and hexagonal.

// Answer:  1533776805

func get? int : int do end
func getT int : int do
  dup 1 + * 2 /
end
func getP int : int do
  dup 3 * 1 - * 2 /
end
func getH int : int do
  dup 2 * 1 - *
end

const N.v sizeof(u64) offset end
const N.i sizeof(u32) offset end
const sizeof(N)        reset end

func !N int int ptr : do
  capture v int i int p ptr do drop drop drop
    v p N.v ptr+ !64
    i p N.i ptr+ !32
  end
end

inline func @N.v ptr : int do
  N.v ptr+ @64
end
inline func @N.i ptr : int do
  N.i ptr+ @32
end

func @N ptr : int int do
  capture p ptr do drop
    p @N.v
    p @N.i
  end
end

func store_any any ptr int : do
  sizeof(ptr) * ptr+
  swap cast(int) swap
  !32
end

func main : int do
  const start 40755 end
  alloc tri   sizeof(N) end
  alloc penta sizeof(N) end
  alloc hexa  sizeof(N) end
  alloc maxval sizeof(u64) end
  alloc same 1 end
  alloc nums sizeof(ptr) 3 * end
  alloc fs sizeof(ptr) 3 * end

  tri   nums 0 store_any
  penta nums 1 store_any
  hexa  nums 2 store_any

  fptr-of getT fs 0 store_any
  fptr-of getP fs 1 store_any
  fptr-of getH fs 2 store_any

  start 285 tri   !N
  start 165 penta !N
  start 143 hexa  !N

  start 1 + maxval !64
  1 same !8

  0 while true do
    capture idx int do
      nums idx sizeof(ptr) * ptr+ @32 cast(ptr)
      fs   idx sizeof(ptr) * ptr+ @32 cast(fptr)
    end

    capture n ptr f fptr do drop drop
      while n @N.v maxval @64 < do
        n @N.i 1 +
        dup f call-like get? swap n !N
      end

      n @N.v
      if dup maxval @64 = do
        same inc8
      else
        1 same !8
        dup maxval !64
      end drop
    end
    if same @8 3 = do break end

    1 + 3 %
  end drop
  maxval @64 puti

  0
end
