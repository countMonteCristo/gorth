include "std/std.gorth"

const N 100 end

alloc array N 1 + end

func main
  : int
do
  // set initial value
  1 array N 1 - ptr+ !8

  0 while dup N < do
    capture age int do
      // print current line
      0 while dup N < do
        capture column int do
          array column ptr+ @8
          if 1 = do '*' else ' ' end putc
        end // capture column
        1 +
      end drop '\n' putc

      // update cells state
      1 while dup N <= do
        capture column int do
          array column 1 - ptr+ @8
          array column     ptr+ @8
          array column 1 + ptr+ @8

          capture p int q int r int do
            drop drop drop
            // (p, q, r) -> (q + r + qr + pqr) mod 2
            q r + q r * + p q * r * + 2 %
          end // capture p q r

          // saving result to firts bit of triplet instead the middle
          // doing so we can use one memory chunk instead of swapping two
          array column 1 - ptr+ !8
        end // capture column
        1 +
      end drop

      // shift to the right by 1
      N while dup 0 > do
        capture column int do
          array column 1 - ptr+ @8
          array column     ptr+ !8
        end // capture column
        1 -
      end drop
      0 array !8
    end // capture age

    1 +
  end drop
  0
end
